@page "/rregistr"
@inject NavigationManager NavManager
@using chatOnline.Data
@using chatOnline.Services
@inject DataContext DataContext
@inject UserContext UserContext
<h3>Форма регистрации</h3>

<div class="card" style="width: 100vw; margin-top: 3rem;">
    <div>
        <div class="form-group">
            <label for="exampleInputEmail1">Электронная почта</label>
            <input @bind-value="_newUser.Username" type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Имя пользователя">
            <small id="emailHelp" class="form-text text-muted">Имя пользователя должно содержать цифры 0-9 и заглавные, прописные буквы</small>
        </div>
        <div class="form-group">
            <label for="exampleInputPassword1">Пароль</label>
            <input @bind-value="_newUser.PasswordConfig" type="password" class="form-control" id="exampleInputPassword1" placeholder="Пароль">
            <small id="emailHelp" class="form-text text-muted">Пароль не должен начинаться с цифры, должен содержать минимум 6 символов, заглавную букву, цифру, спец символ и одно из следующих слов: talgat, malishika, hochetsdat, praktiku</small>
        </div>
        <div class="form-group">
            <label for="exampleInputPassword1">Подтверждение пароля</label>
            <input @bind-value="_newUser.Password" type="password" class="form-control" id="exampleInputPassword1" placeholder="Пароль">
            <small id="emailHelp" class="form-text text-muted">Введите пароль повторно</small>
        </div>
    </div>
    <button @onclick="VoitiChat2" class="btn btn-primary" style="background-color: lightpink ; color: black; border:none ; margin-right:50px">Войти</button>

</div>

@code {
    private User _newUser = new User("", "","");
    // private string message = "";
    // private string messageType = "";

    public bool CheckPasswordRequirements(string passwordConfig, string password)
    {
        if (passwordConfig.Length <= 6)
            return false;

        if (!passwordConfig.Any(char.IsUpper))
            return false;

        if (!passwordConfig.Any(char.IsDigit))
            return false;

        if (!passwordConfig.Any(c => !char.IsLetterOrDigit(c)))
            return false;

        if (passwordConfig.Trim() != password.Trim())
            return false;

        return true;
    }

    public bool CheckPassword2(string password)
    {
        bool containsRequiredWords = false;
        foreach (string word in new List<string> { "talgat", "malishika", "hochetsdat", "praktiku" })
        {
            if (_newUser.Password.Contains(word))
            {
                containsRequiredWords = true;
                break;
            }
        }

        // if (!containsRequiredWords)
        // {
        //     message = "Пароль должен содержать одно из следующих слов: talgat, malishika, hochetsdat, praktiku";
        //     messageType = "ошибка";
        //     return false;
        // }

        return true;
    }

    public bool CheckUsernameRequirements(string username)
    {
        if (username.Length < 6)
            return false;

        if (char.IsDigit(username[0]))
            return false;

        return true;
    }


    public void VoitiChat2()
    {

        if (CheckUsernameRequirements(_newUser.Username) && CheckPasswordRequirements(_newUser.Password, _newUser.PasswordConfig) && CheckPassword2(_newUser.Password))
        {
            NavManager.NavigateTo("/chatik");
        }

    }
}



